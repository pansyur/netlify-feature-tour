name: Python Torrent Download and Upload Artifacts

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  download-and-upload:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python environment
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'  # Set Python version

    - name: Install required Python packages
      run: |
        python -m pip install --upgrade pip
        pip install python-libtorrent

    - name: Download Torrent via Python Script
      run: |
        # Create a Python script to handle torrent downloading
        echo "
import libtorrent as lt
import time

# Your magnet link
magnet_link = 'magnet:?xt=urn:btih:62850A9765A30822792790F5743BF13CEC9BD12E&dn=Abbott+and+Costello+Meet+the+Killer%2C+Boris+Karloff++%28Comedy+1949%29++720p++BrRip&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.pirateparty.gr%3A6969%2Fannounce&tr=udp%3A%2F%2Fexodus.desync.com%3A6969%2Fannounce&tr=udp%3A%2F%2Fopentrackr.org%3A1337%2Fannounce&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337%2Fannounce&tr=udp%3A%2F%2Fexplodie.org%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.pomf.se%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80%2Fannounce&tr=udp%3A%2F%2F9.rarbg.com%3A2710%2Fannounce&tr=udp%3A%2F%2F9.rarbg.to%3A2710%2Fannounce&tr=udp%3A%2F%2F9.rarbg.me%3A2710%2Fannounce&tr=udp%3A%2F%2Fopen.demonii.si%3A1337%2Fannounce&tr=udp%3A%2F%2Fipv4.tracker.harry.lu%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337%2Fannounce&tr=http%3A%2F%2Ftracker.openbittorrent.com%3A80%2Fannounce&tr=udp%3A%2F%2Fopentracker.i2p.rocks%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.internetwarriors.net%3A1337%2Fannounce&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969%2Fannounce&tr=udp%3A%2F%2Fcoppersurfer.tk%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.zer0day.to%3A1337%2Fannounce'  # Replace with your actual magnet link

# Create a session and add the magnet link
ses = lt.session()
params = {
    'save_path': './downloads/',  # Directory to save the downloaded files
    'storage_mode': lt.storage_mode_t(2),
}
handle = lt.add_magnet_uri(ses, magnet_link, params)

# Wait for the download to start and check the status
print('downloading', magnet_link)
while not handle.has_metadata():
    time.sleep(1)  # Wait until metadata is received

# Start downloading the torrent
print('downloading torrent...')
while handle.status().state != lt.torrent_status.seeding:
    s = handle.status()
    print(f'{s.state} {s.download_rate / 1000} kB/s {s.upload_rate / 1000} kB/s {s.num_peers} peers {s.progress * 100:.2f}% complete')
    time.sleep(1)

print(f'Torrent {magnet_link} finished downloading!')

" > download_torrent.py

        # Run the Python script
        python download_torrent.py

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: downloaded-files
        path: ./downloads  # This should match the 'save_path' used in the script
